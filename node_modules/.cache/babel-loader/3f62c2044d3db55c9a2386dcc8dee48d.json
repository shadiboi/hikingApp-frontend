{"ast":null,"code":"var _jsxFileName = \"/Users/shadiaoutabachi/Desktop/sei-main/hikingapp/hikingApp-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport AuthPage from './AuthPage/AuthPage';\nimport MainContainer from './MainContainer/MainContainer';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.checkForUser = async () => {\n      const currentUser = await fetch('http://localhost:8080/current', {\n        credentials: 'include'\n      });\n      const parsedResponse = await currentUser.json();\n\n      if (parsedResponse.status == 200) {\n        this.setState({\n          loggedIn: true,\n          currentUser: currentUser\n        });\n      }\n    };\n\n    this.handleLogin = async formData => {\n      //console.log(formData);\n      try {\n        const loginResponse = await fetch('http://localhost:8080/login', {\n          method: 'POST',\n          body: JSON.stringify(formData),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedLoginResponse = await loginResponse.json();\n        console.log(parsedLoginResponse, 'LOGIN HANDLED');\n\n        if (parsedLoginResponse.status != 500) {\n          this.setState({\n            loggedIn: true,\n            currentUser: parsedLoginResponse\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleLogout = async () => {\n      console.log(\"logout hit\");\n      const response = await fetch('http://localhost:8080/logout', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      this.setState({\n        loggedIn: false,\n        currentUser: \"\"\n      });\n    };\n\n    this.handleRegister = async formData => {\n      console.log(formData);\n      const response = await fetch('http://localhost:8080/users', {\n        method: 'POST',\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const parsedResponse = await response.json();\n      console.log(parsedResponse, \"PARSED RESPONSE FROM REGISTER\");\n\n      if (parsedResponse.status != 500) {\n        this.setState({\n          loggedIn: true,\n          currentUser: parsedResponse\n        });\n      }\n\n      console.log(this.state, 'STATE AFTER REGISTRERING');\n    };\n\n    this.updateUser = async (id, user) => {\n      console.log('UPDATE CLICKED');\n      const response = await fetch(\"http://localhost:8080/users/\".concat(id), {\n        method: 'PUT',\n        body: JSON.stringify(user),\n        credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log('MADE IT PAST RESPONSE');\n      const updatedUser = await response.json();\n      console.log(updatedUser);\n\n      if (response.status === 200) {\n        console.log('GOOD JOB!!!!!');\n        this.setState({\n          currentUser: updatedUser\n        });\n        console.log(this.state, \"<<<<<<<<<<<<<<<<<<STATE\");\n      }\n    };\n\n    this.deleteUser = async id => {\n      if (this.state.currentUser !== null) {\n        console.log(\"DELETING USER \".concat(this.state.currentUser.username));\n        const deletedUser = await fetch(\"http://localhost:8080/users/\".concat(this.state.currentUser.id), {\n          method: 'DELETE'\n        });\n\n        if (deletedUser) {\n          this.setState({\n            loggedIn: false,\n            currentUser: null\n          });\n        }\n      }\n    };\n\n    this.state = {\n      loggedIn: false,\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {//this.checkForUser();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.loggedIn ? React.createElement(MainContainer, {\n      handleLogout: this.handleLogout,\n      loggedIn: this.state.loggedIn,\n      currentUser: this.state.currentUser,\n      updateUser: this.updateUser,\n      deleteUser: this.deleteUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }) : React.createElement(AuthPage, {\n      handleLogin: this.handleLogin,\n      handleRegister: this.handleRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shadiaoutabachi/Desktop/sei-main/hikingapp/hikingApp-frontend/src/App.js"],"names":["React","Component","AuthPage","MainContainer","App","constructor","checkForUser","currentUser","fetch","credentials","parsedResponse","json","status","setState","loggedIn","handleLogin","formData","loginResponse","method","body","JSON","stringify","headers","parsedLoginResponse","console","log","err","handleLogout","response","handleRegister","state","updateUser","id","user","updatedUser","deleteUser","username","deletedUser","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AuthPage from './AuthPage/AuthPage'\nimport MainContainer from './MainContainer/MainContainer';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      loggedIn: false,\n      currentUser: null\n    }\n  }\n  componentDidMount(){\n    //this.checkForUser();\n  }\n  checkForUser = async () => {\n    const currentUser = await fetch('http://localhost:8080/current', {\n      credentials: 'include'\n    })\n    const parsedResponse = await currentUser.json();\n    if(parsedResponse.status == 200){\n      this.setState({\n        loggedIn: true,\n        currentUser: currentUser\n      })\n    }\n  }\n  handleLogin = async (formData) => {\n    //console.log(formData);\n    try{\n      const loginResponse = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      const parsedLoginResponse = await loginResponse.json();\n      console.log(parsedLoginResponse, 'LOGIN HANDLED');\n      if (parsedLoginResponse.status != 500){\n      this.setState({\n        loggedIn: true,\n        currentUser: parsedLoginResponse\n      })\n      }\n    }catch(err){\n      console.log(err);\n    }\n  }\n  handleLogout = async () => {\n    console.log(\"logout hit\")\n    const response = await fetch('http://localhost:8080/logout', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    this.setState({\n      loggedIn: false,\n      currentUser: \"\"\n    })\n  }\n  handleRegister = async (formData) => {\n    console.log(formData);\n    const response = await fetch('http://localhost:8080/users', {\n      method: 'POST',\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        'Content-Type':  'application/json'\n      }\n    })\n    const parsedResponse = await response.json();\n    console.log(parsedResponse, \"PARSED RESPONSE FROM REGISTER\");\n    if (parsedResponse.status != 500){\n      this.setState({\n        loggedIn: true,\n        currentUser: parsedResponse\n      })\n  }\n    console.log(this.state, 'STATE AFTER REGISTRERING')\n  }\n  updateUser = async (id, user) => {\n    console.log('UPDATE CLICKED')\n    const response = await fetch(`http://localhost:8080/users/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(user),\n        credentials: 'include',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    console.log('MADE IT PAST RESPONSE')\n    const updatedUser = await response.json();\n    console.log(updatedUser);\n    if(response.status === 200){\n        console.log('GOOD JOB!!!!!')\n        this.setState({\n            currentUser: updatedUser\n        })\n        console.log(this.state, \"<<<<<<<<<<<<<<<<<<STATE\")\n    }\n\n  }\n  deleteUser = async (id) => {\n    if(this.state.currentUser !== null){\n      console.log(`DELETING USER ${this.state.currentUser.username}`)\n      const deletedUser =  await fetch(`http://localhost:8080/users/${this.state.currentUser.id}`, {\n        method: 'DELETE'\n      })\n      if(deletedUser){\n        this.setState({\n          loggedIn: false,\n          currentUser: null\n        })\n      }\n    }\n  } \n  render(){\n \n\n    return (\n      <div className=\"App\">\n       {this.state.loggedIn ?\n       <MainContainer handleLogout={this.handleLogout} loggedIn = {this.state.loggedIn} currentUser = {this.state.currentUser} updateUser = {this.updateUser} deleteUser = {this.deleteUser}/>\n       :\n       <AuthPage handleLogin = {this.handleLogin} handleRegister = {this.handleRegister}/>\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
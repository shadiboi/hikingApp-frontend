{"ast":null,"code":"var _jsxFileName = \"/Users/shadiaoutabachi/Desktop/sei-main/hikingApp/front-end/hikingapp/src/MainContainer/TrailInfo/TrailInfo.jsx\";\nimport React, { Component } from 'react';\nimport UserInput from './UserInput/UserInput';\nimport WeatherInfo from './WeatherInfo/WeatherInfo';\nimport Breweries from './Breweries/Breweries';\n\nclass TrailInfo extends Component {\n  constructor() {\n    super();\n\n    this.findGeoCode = async formData => {\n      try {\n        const searchURL = \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=\".concat(formData.city, \",+\").concat(formData.state, \"&key=AIzaSyDVPLLlJAQ679Frd0gu11khJ9mW02wsvWQ\");\n        const result = await fetch(searchURL);\n        const parsedResponse = await result.json();\n\n        if (result.status === 200) {\n          this.setState({\n            lat: parsedResponse.results[0].geometry.location.lat,\n            lng: parsedResponse.results[0].geometry.location.lng,\n            city: formData.city,\n            state: formData.state,\n            minLength: formData.minLength,\n            maxLength: formData.maxLength,\n            difficulty: formData.difficulty\n          });\n        }\n\n        this.findTrails();\n      } catch (err) {\n        console.log('YOURE WRONG');\n      }\n    };\n\n    this.findTrails = async () => {\n      console.log(this.state.maxLength);\n\n      try {\n        const searchURL = \"https://www.hikingproject.com/data/get-trails?lat=\".concat(this.state.lat, \"&lon=\").concat(this.state.lng, \"&minLength=\").concat(this.state.minLength, \"&maxDistance=10&key=200465360-942e3fb792b81fa531e25b7484cbc0f9\");\n        const result = await fetch(searchURL);\n        const parsedResponse = await result.json();\n\n        if (result.status === 200) {\n          if (this.state.difficulty === '') {\n            this.setState({\n              trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength)\n            });\n          } else {\n            this.setState({\n              trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength && trails.difficulty === this.state.difficulty)\n            });\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      lat: '',\n      lng: '',\n      city: '',\n      state: '',\n      trails: [],\n      minLength: '',\n      maxLength: '',\n      difficulty: ''\n    };\n  }\n\n  render(formData) {\n    console.log(this.state.trails); // console.log(formData)\n\n    console.log(this.state.lat, this.state.lng, 'IN TRAILS INFO');\n    const trailList = this.state.trails.map(trail => {\n      return React.createElement(\"div\", {\n        className: \"eachTrail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, trail.name)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, trail.location)), React.createElement(\"div\", {\n        className: \"mainTrailInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, trail.length, \" miles\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"peak elevation: \", trail.high)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"rating: \", trail.stars, \" stars\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: trail.url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"more info\"))));\n    }); // console.log('this is the lat', this.state.lat, this.state.lng)\n\n    return React.createElement(\"div\", {\n      className: \"whatIsThisDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"userInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(UserInput, {\n      findGeoCode: this.findGeoCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), this.state.lat !== '' ? React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(WeatherInfo, {\n      lat: this.state.lat,\n      lng: this.state.lng,\n      city: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })) : null, this.state.lng !== '' ? React.createElement(\"div\", {\n      className: \"breweries\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Breweries, {\n      lat: this.state.lat,\n      lng: this.state.lng,\n      city: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })) : null), this.state.lng !== '' ? React.createElement(\"div\", {\n      className: \"trailInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Hiking Trails Near \", this.state.city, \", \", this.state.state), React.createElement(\"div\", {\n      className: \"trailList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, trailList)) : null);\n  }\n\n}\n\nexport default TrailInfo;","map":{"version":3,"sources":["/Users/shadiaoutabachi/Desktop/sei-main/hikingApp/front-end/hikingapp/src/MainContainer/TrailInfo/TrailInfo.jsx"],"names":["React","Component","UserInput","WeatherInfo","Breweries","TrailInfo","constructor","findGeoCode","formData","searchURL","city","state","result","fetch","parsedResponse","json","status","setState","lat","results","geometry","location","lng","minLength","maxLength","difficulty","findTrails","err","console","log","trails","filter","length","render","trailList","map","trail","name","high","stars","url"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport UserInput from './UserInput/UserInput';\nimport WeatherInfo from './WeatherInfo/WeatherInfo'\nimport Breweries from './Breweries/Breweries';\n\n\nclass TrailInfo extends Component {\n    constructor(){\n        super();\n        this.state = {\n            lat: '',\n            lng: '',\n            city: '',\n            state: '',\n            trails: [],\n            minLength: '',\n            maxLength: '',\n            difficulty: '',\n        }\n    }\n\n    findGeoCode = async (formData) => {\n        try{\n        const searchURL = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=${formData.city},+${formData.state}&key=AIzaSyDVPLLlJAQ679Frd0gu11khJ9mW02wsvWQ`\n        const result = await fetch(searchURL)\n        const parsedResponse = await result.json();\n        if(result.status === 200){\n            this.setState({\n                lat: parsedResponse.results[0].geometry.location.lat,\n                lng: parsedResponse.results[0].geometry.location.lng,\n                city: formData.city,\n                state: formData.state,\n                minLength: formData.minLength,\n                maxLength: formData.maxLength,\n                difficulty: formData.difficulty\n            })\n        }\n        this.findTrails();\n        }catch(err){\n            console.log('YOURE WRONG')\n        }\n    }\n    findTrails = async () => {\n        console.log(this.state.maxLength)\n        try{\n        const searchURL = `https://www.hikingproject.com/data/get-trails?lat=${this.state.lat}&lon=${this.state.lng}&minLength=${this.state.minLength}&maxDistance=10&key=200465360-942e3fb792b81fa531e25b7484cbc0f9`\n        const result = await fetch(searchURL);\n        const parsedResponse = await result.json();\n        if(result.status === 200){\n            if(this.state.difficulty === ''){\n                this.setState({\n                    trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength)\n                }) \n            } else {\n                this.setState({\n                    trails: parsedResponse.trails.filter(trails => trails.length < this.state.maxLength && trails.difficulty === this.state.difficulty)\n                })\n            }\n        }\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    render(formData){\n        console.log(this.state.trails)\n        // console.log(formData)\n        console.log(this.state.lat, this.state.lng, 'IN TRAILS INFO')\n        const trailList = this.state.trails.map((trail) => {\n            return (\n                <div className = 'eachTrail'>\n                    <div>\n                         <h4>{trail.name}</h4> \n                    </div>\n                     <div>\n                        <p>{trail.location}</p> \n                     </div>\n                    <div className = 'mainTrailInfo'>\n                        <p>{trail.length} miles</p>\n                     </div>\n                    <div>\n                        <p>peak elevation: {trail.high}</p>\n                    </div>\n                    <div>\n                        <p>rating: {trail.stars} stars</p>\n                    </div>\n                    <div>\n                        <p><a href = {trail.url} target=\"_blank\">more info</a></p>\n                    </div>\n                </div>\n            )\n        })\n        // console.log('this is the lat', this.state.lat, this.state.lng)\n        return(\n            <div className = 'whatIsThisDiv'>\n                <div>\n                    <div className = 'userInput'>\n                        <UserInput findGeoCode = {this.findGeoCode}/>\n                    </div>\n                {this.state.lat !== '' ?\n                    <div className = 'weather'>\n                        <WeatherInfo lat = {this.state.lat} lng = {this.state.lng} city = {this.state.city} />\n                    </div>\n                :\n                null\n                }\n                {this.state.lng !== ''?\n                    <div className = 'breweries'>\n                        <Breweries lat = {this.state.lat} lng = {this.state.lng} city = {this.state.city}/>\n                    </div>\n                :\n                null\n                }\n                </div>\n                {this.state.lng !== '' ?\n                <div className = 'trailInfo'>\n                    <h2>Hiking Trails Near {this.state.city}, {this.state.state}</h2>\n                    <div className = 'trailList'>\n                    {trailList}\n                    </div>\n                </div>\n                :\n                null\n                }\n                \n            </div>\n        )\n    }\n}\n\n\nexport default TrailInfo;"]},"metadata":{},"sourceType":"module"}
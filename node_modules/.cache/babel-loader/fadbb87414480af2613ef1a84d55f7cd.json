{"ast":null,"code":"var _jsxFileName = \"/Users/shadiaoutabachi/Desktop/sei-main/hikingapp/hikingApp-frontend/src/MainContainer/TrailInfo/WeatherInfo/WeatherInfo.jsx\";\nimport React, { Component } from 'react';\n\nclass WeatherInfo extends Component {\n  constructor() {\n    super();\n\n    this.findWeather = async () => {\n      try {\n        const searchURL = \"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/1deca2ce9560a3815284c163518326b0/\".concat(this.props.lat, \",\").concat(this.props.lng);\n        const result = await fetch(searchURL);\n        const parsedResponse = await result.json(); // console.log(parsedResponse)\n\n        if (result.status === 200) {\n          this.setState({\n            currWeather: parsedResponse\n          }); // console.log(this.state.currWeather)\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      currWeather: []\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.props)\n    this.findWeather();\n  }\n\n  componentWillReceiveProps() {\n    // console.log(this.props)\n    this.findWeather();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.currWeather.currently !== undefined ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Current Weather in \", this.props.city), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.currWeather.currently.summary), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.currWeather.currently.temperature, \"\\xB0F\")) : null);\n  }\n\n}\n\nexport default WeatherInfo;","map":{"version":3,"sources":["/Users/shadiaoutabachi/Desktop/sei-main/hikingapp/hikingApp-frontend/src/MainContainer/TrailInfo/WeatherInfo/WeatherInfo.jsx"],"names":["React","Component","WeatherInfo","constructor","findWeather","searchURL","props","lat","lng","result","fetch","parsedResponse","json","status","setState","currWeather","err","console","log","state","componentDidMount","componentWillReceiveProps","render","currently","undefined","city","summary","temperature"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAGA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAChCE,EAAAA,WAAW,GAAE;AACT;;AADS,SAoBbC,WApBa,GAoBC,YAAY;AACtB,UAAG;AACC,cAAMC,SAAS,mHAA4G,KAAKC,KAAL,CAAWC,GAAvH,cAA8H,KAAKD,KAAL,CAAWE,GAAzI,CAAf;AACA,cAAMC,MAAM,GAAG,MAAMC,KAAK,CAACL,SAAD,CAA1B;AACA,cAAMM,cAAc,GAAG,MAAMF,MAAM,CAACG,IAAP,EAA7B,CAHD,CAIC;;AACA,YAAGH,MAAM,CAACI,MAAP,KAAkB,GAArB,EAAyB;AACrB,eAAKC,QAAL,CAAc;AACVC,YAAAA,WAAW,EAAEJ;AADH,WAAd,EADqB,CAIrB;AACH;AAEA,OAZL,CAYK,OAAMK,GAAN,EAAU;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KApCQ;;AAET,SAAKG,KAAL,GAAa;AACTJ,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKhB,WAAL;AAEH;;AAEDiB,EAAAA,yBAAyB,GAAG;AACxB;AACA,SAAKjB,WAAL;AACH;;AAsBDkB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWJ,WAAX,CAAuBQ,SAAvB,KAAqCC,SAArC,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKlB,KAAL,CAAWmB,IAAnC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,KAAL,CAAWJ,WAAX,CAAuBQ,SAAvB,CAAiCG,OAAtC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKP,KAAL,CAAWJ,WAAX,CAAuBQ,SAAvB,CAAiCI,WAAtC,UAHJ,CADC,GAOD,IARJ,CADJ;AAaH;;AArD+B;;AAyDpC,eAAezB,WAAf","sourcesContent":["import React, {Component} from 'react';\n\n\nclass WeatherInfo extends Component {\n    constructor(){\n        super();\n        this.state = {\n            currWeather: []\n        }\n    }\n\n    componentDidMount() {\n        // console.log(this.props)\n        this.findWeather();\n    \n    }\n\n    componentWillReceiveProps() {\n        // console.log(this.props)\n        this.findWeather();\n    }\n\n    \n\n    findWeather = async () => {\n        try{\n            const searchURL = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/1deca2ce9560a3815284c163518326b0/${this.props.lat},${this.props.lng}`\n            const result = await fetch(searchURL);\n            const parsedResponse = await result.json();\n            // console.log(parsedResponse)\n            if(result.status === 200){\n                this.setState({\n                    currWeather: parsedResponse\n                })\n                // console.log(this.state.currWeather)\n            }\n        \n            }catch(err){\n                console.log(err);\n            }\n        }\n    \n    render(){\n        return(\n            <div>\n                {this.state.currWeather.currently !== undefined ?\n                <div>\n                    <h2>Current Weather in {this.props.city}</h2>\n                    <h3>{this.state.currWeather.currently.summary}</h3>\n                    <h3>{this.state.currWeather.currently.temperature}Â°F</h3>\n                </div>\n                :\n                null\n                }\n            </div>\n        )\n    }\n}\n\n\nexport default WeatherInfo;\n"]},"metadata":{},"sourceType":"module"}